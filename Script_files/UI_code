<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Handwritten Digit Recognition</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.2/p5.min.js"></script>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 flex flex-col items-center justify-center min-h-screen">
  <h1 class="text-3xl font-bold mb-4">Handwritten Digit Recognition</h1>
  <div class="bg-white p-6 rounded-lg shadow-lg">
    <div id="canvasContainer" class="mb-4"></div>
    <div class="flex space-x-4 mb-4">
      <button id="predictButton" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
        Predict Digit
      </button>
      <button id="clearButton" class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded">
        Clear Canvas
      </button>
    </div>
    <div id="prediction" class="text-lg"></div>
  </div>
  <footer class="mt-8 text-gray-600">
    <p>Built by [Your Name] | <a href="projects.html" class="underline">More Projects</a></p>
  </footer>

  <script>
    let sketch = function(p) {
      let canvas;
      p.setup = function() {
        canvas = p.createCanvas(280, 280);
        canvas.parent('canvasContainer');
        p.background(0);
        p.stroke(255);
        p.strokeWeight(20);
      };

      p.mouseDragged = function() {
        if (p.mouseX >= 0 && p.mouseX < p.width && p.mouseY >= 0 && p.mouseY < p.height) {
          p.line(p.pmouseX, p.pmouseY, p.mouseX, p.mouseY);
        }
      };

      p.getPixelData = function() {
        p.loadPixels();
        const pixels = [];
        for (let y = 0; y < 28; y++) {
          for (let x = 0; x < 28; x++) {
            let sum = 0;
            for (let dy = 0; dy < 10; dy++) {
              for (let dx = 0; dx < 10; dx++) {
                let idx = 4 * ((y * 10 + dy) * 280 + (x * 10 + dx));
                sum += p.pixels[idx];
              }
            }
            pixels.push(sum / (10 * 10 * 255));
          }
        }
        return pixels;
      };

      p.clearCanvas = function() {
        p.background(0);
      };
    };

    let myp5 = new p5(sketch);

    document.getElementById('predictButton').addEventListener('click', async () => {
      const pixels = myp5.getPixelData();
      try {
        const response = await fetch('/predict', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ pixels })
        });
        const result = await response.json();
        const prediction = result.prediction;
        const confidences = result.confidences;
        let output = `Predicted Digit: ${prediction}<br>Confidences:<br>`;
        confidences.forEach(c => {
          output += `Digit ${c.digit}: ${c.prob}%<br>`;
        });
        document.getElementById('prediction').innerHTML = output;
      } catch (error) {
        document.getElementById('prediction').innerHTML = 'Error: Could not connect to server';
        console.error(error);
      }
    });

    document.getElementById('clearButton').addEventListener('click', () => {
      myp5.clearCanvas();
      document.getElementById('prediction').innerHTML = '';
    });
  </script>
</body>
</html>